{"version":3,"sources":["services/personService.js","components/inputForm.js","components/statusMessage.js","components/personListElement.js","components/phonebookList.js","components/filterForm.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","id","newPerson","put","delete","InputForm","addHandler","useState","newName","setNewName","newNumber","setNewNumber","clearInputForms","value","onChange","event","target","type","onClick","preventDefault","name","number","StatusMessage","statusMessage","isError","msg","length","classes","className","PersonListElement","removePerson","PhonebookList","persons","filterInput","filteredList","trim","filter","toLowerCase","includes","filterMatches","map","FilterForm","setFilterInput","App","setPersons","statusMsg","setStatusMsg","useEffect","personService","addPerson","validatePerson","concat","setSuccessMsg","catch","error","setErrorMsg","alert","updatePerson","confirmAction","updatedPersons","p","findPersonByName","find","action","window","confirm","setTimeout","personFoundWithId","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ed8159e.chunk.js","sourcesContent":["\r\nimport axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n   return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst getById = id => {\r\n   return axios.get(`${baseUrl}/${id}`).then(response => response.data)\r\n}\r\n\r\nconst add = person => {\r\n   return axios.post(baseUrl, person).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n   return axios.put(`${baseUrl}/${id}`, newPerson).then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n   return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n}\r\n\r\nexport default { getAll, getById, add, update, remove }","import React, { useState } from 'react'\r\n\r\nconst InputForm = ({ addHandler }) => {\r\n\r\n   const [ newName, setNewName ] = useState('');\r\n   const [ newNumber, setNewNumber ] = useState('');\r\n\r\n   const addNewPerson = (event) => {\r\n      event.preventDefault();\r\n      const newPerson = {\r\n         name: newName,\r\n         number: newNumber\r\n      };\r\n      addHandler(newPerson, clearInputForms);\r\n   }\r\n\r\n   const clearInputForms = () => {\r\n      setNewName('');\r\n      setNewNumber('');\r\n   }\r\n\r\n   const updateName = (event) => setNewName(event.target.value);\r\n   const updateNumber = (event) => setNewNumber(event.target.value);\r\n\r\n   return (\r\n      <div>\r\n         <h3>Add new person or update existing person</h3>\r\n         <form>\r\n            <div>\r\n               name: <input value={newName} onChange={updateName} />\r\n            </div>\r\n            <div>\r\n               number: <input value={newNumber} onChange={updateNumber} />\r\n            </div>\r\n            <div>\r\n               <button type=\"submit\" onClick={addNewPerson}>add / update</button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default InputForm;","\r\nimport './statusMessage.css'\r\n\r\nconst StatusMessage = ({statusMessage}) => {\r\n   const {isError, msg} = statusMessage\r\n   if (msg === null || msg.length === 0 || isError === null) {\r\n      return null\r\n   }\r\n\r\n   const classes = `status-message ${isError ? 'error' : ''}`\r\n\r\n   return (\r\n      <div className={classes}>\r\n         {msg}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default StatusMessage","const PersonListElement = ({person, removePerson}) => {\r\n   const {name, number, id} = person;\r\n\r\n   return (            \r\n      <li>\r\n         {name} {number} <button onClick={() => removePerson(person)} >delete</button>\r\n      </li>\r\n   );\r\n}\r\n\r\nexport default PersonListElement;","import PersonListElement from \"./personListElement\";\r\n\r\nconst PhonebookList = ({ persons, filterInput, removePerson }) => {\r\n   \r\n   const filterMatches = (person) => {\r\n      return person.name.toLowerCase().includes(filterInput.toLowerCase()) \r\n         || person.number.toLowerCase().includes(filterInput.toLowerCase());\r\n   }\r\n\r\n   const filteredList = filterInput.trim().length > 0 \r\n      ? persons.filter(person => filterMatches(person))\r\n      : persons;\r\n\r\n   return (\r\n      <div>\r\n         <h3>Numbers</h3>\r\n         <ul>\r\n            {filteredList.map(person => \r\n               <PersonListElement person={person} removePerson={removePerson} key={person.name} />\r\n            )}\r\n         </ul>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default PhonebookList;","const FilterForm = ({filterInput, setFilterInput}) => {\r\n   return (\r\n      <form>\r\n         <div>\r\n            filter persons with: <input value={filterInput} onChange={(event) => setFilterInput(event.target.value)} />\r\n         </div>\r\n    </form>\r\n   )\r\n}\r\n\r\nexport default FilterForm;","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport personService from './services/personService'\nimport InputForm from './components/inputForm'\nimport StatusMessage from './components/statusMessage'\nimport PhonebookList from './components/phonebookList'\nimport FilterForm from './components/filterForm'\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ filterInput, setFilterInput ] = useState('')\n  const [ statusMsg, setStatusMsg ] = useState({ isError: null, msg: '' })\n\n  useEffect(() => {\n    personService.getAll().then(persons => setPersons(persons))\n  }, [])\n\n  const addOrUpdatePerson = (newPerson, clearInputForms) => {\n    const personFoundWithId = findPersonByName(newPerson.name);\n    if (personFoundWithId) {\n      updatePerson(personFoundWithId.id, newPerson)\n    } else {\n      addPerson(newPerson)\n    }\n    clearInputForms()\n  }\n\n  const addPerson = newPerson => {\n    if (!validatePerson(newPerson)) {\n      alert(`Name and phone number are required for person`)\n      return\n    } \n    personService.add(newPerson)\n      .then(person => {\n        setPersons(persons.concat(person))\n        setSuccessMsg(`Person ${person.name} added succesfully`)\n      })\n      .catch(error => {\n        setErrorMsg(`Error: couldn\\'t add person named ${newPerson.name}. ${error}`)\n      })\n  }\n\n  const updatePerson = (id, newPerson) => {\n    if(!confirmAction('update', newPerson.name)) {\n      return\n    }\n    personService.update(id, newPerson)\n      .then(person => {\n        const updatedPersons = persons.filter(p => p.id != person.id)\n        setPersons(updatedPersons.concat(person))\n        setSuccessMsg(`Person ${person.name} updated succesfully`)\n      })\n      .catch(error => {\n        setErrorMsg(`Error: couldn\\'t update person named ${newPerson.name}. ${error}`)\n      })\n  }\n\n  const removePerson = (person) => {\n    if(!confirmAction('remove', person.name)) return\n    personService.remove(person.id)\n      .then(response => {\n        setPersons(persons.filter(p => p.id != person.id))\n        setSuccessMsg(`Person ${person.name} removed succesfully`)\n      })\n      .catch(error => {\n        if (error?.response?.status === 404) {\n          setErrorMsg(`Error: person ${person.name} allready removed from the server.`)\n          setPersons(persons.filter(p => p.id != person.id))\n        } else {\n          setErrorMsg(`Error: couldn\\'t remove person named ${person.name}. ${error}`)\n        }\n      })\n  }\n\n  const findPersonByName = (name) => {\n    return persons.find(person => person.name === name);\n  }\n\n  const validatePerson = newPerson => {\n    return newPerson?.name?.length > 0 && newPerson?.number?.length > 0\n  }\n\n  const confirmAction = (action, target) => {\n    return window.confirm(`Are you sure you want to ${action} person ${target}?`);\n  }\n\n  const setSuccessMsg = msg => {\n    setStatusMsg({ isError: false , msg })\n    setTimeout(() => setStatusMsg({ isError: false, msg: '' }), 5000)\n  }\n\n  const setErrorMsg = msg => {\n    setStatusMsg({ isError: true, msg })\n    setTimeout(() => setStatusMsg({ isError: false, msg: '' }), 5000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <FilterForm filterInput={filterInput} setFilterInput={setFilterInput} />\n      <InputForm addHandler={addOrUpdatePerson} />\n      <StatusMessage statusMessage={statusMsg} />\n      <PhonebookList persons={persons} removePerson={removePerson} filterInput={filterInput} />\n    </div>\n  )\n\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}